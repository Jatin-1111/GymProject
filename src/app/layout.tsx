// // import type { Metadata } from "next";
// // import { Geist, Geist_Mono } from "next/font/google";
// // import "./globals.css";
// // import { Inter } from "next/font/google"; 
// // import Navbar from "./components/Navbar";

// // const inter = Inter({ subsets: ["latin"] }); 

// // const geistSans = Geist({
// //   variable: "--font-geist-sans",
// //   subsets: ["latin"],
// // });

// // const geistMono = Geist_Mono({
// //   variable: "--font-geist-mono",
// //   subsets: ["latin"],
// // });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en">
// //       <body className={inter.className}>
// //         <Navbar />
// //         <main>
// //           {children}
// //         </main>
// //       </body>
// //     </html>
// //   );
// // }

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { Inter, Bebas_Neue } from "next/font/google"; 
// import Navbar from "./components/Navbar";

// const inter = Inter({ subsets: ["latin"] }); 

// // Add the American-style font
// const americanFont = Bebas_Neue({
//   subsets: ["latin"],
//   weight: ["400"],
//   variable: "--font-american",
// });

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={`${inter.className} ${americanFont.variable}`}>
//         <Navbar />
//         <main>
//           {children}
//         </main>
//       </body>
//     </html>
//   );
// }

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { Inter, Oswald } from "next/font/google"; // Added Oswald - similar to Century Gothic

// const inter = Inter({ subsets: ["latin"] }); 

// // Oswald is a good alternative to Century Gothic
// const americanFont = Oswald({
//   subsets: ["latin"],
//   weight: ["400", "500", "600", "700"],
//   variable: "--font-american",
// });

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang={americanFont.variable}>
//       <body className={`${inter.className} ${americanFont.variable}`}>
//         <main>
//           {children}
//         </main>
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Inter, Poppins } from "next/font/google";

const inter = Inter({ subsets: ["latin"] }); 

const poppins = Poppins({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700", "800", "900"], // Choose weights you need
  variable: "--font-poppins",
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Armour Zone Website",
  description: "Generated by Using Next JS",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={poppins.variable}>
      <body className={`${inter.className} ${poppins.variable}`}>
        <main>
          {children}
        </main>
      </body>
    </html>
  );
}